#!/usr/bin/python3

# -*- coding:utf-8 -*-
from PIL import Image, ImageDraw, ImageFont  # Font handeling
from waveshare_epd import epd2in13_V2
import os
import time
from os.path import exists
import configparser #to handle the config file.

#import configuration file:
#Read ser2bt_config.ini file
config_obj = configparser.ConfigParser()
config_obj.read("/etc/ser2bt_config.ini")
screen = config_obj["screen"]
shutdown_screen = config_obj["shutdown_screen"]

# parameters to use the keys from the ser2bt_config.ini
screen_rotate = int(screen["screen_rotate"])
foreground = int(screen["foreground"])
background = int(screen["background"])

# Variable decleration
tmp_dir='/tmp/'
shut_file = 'shut'
host_name=os.uname()[1]  # define host_name
epd = epd2in13_V2.EPD()
picdir='/usr/local/lib/ser2bt-bridge/'
roboto_font_dir='/usr/share/fonts/truetype/roboto/unhinted/RobotoTTF/'
f_top_line_font16 = ImageFont.truetype(roboto_font_dir+'Roboto-Medium.ttf', 16)
f_title_font18 = ImageFont.truetype(roboto_font_dir+'Roboto-Bold.ttf', 18)
f_title_font24 = ImageFont.truetype(roboto_font_dir+'Roboto-Bold.ttf', 24)

bmp = Image.open(os.path.join(picdir, 'logo.bmp'))
exit_image = Image.new('1', (epd.height, epd.width), int(background))  #clear the frame
exit_draw = ImageDraw.Draw(exit_image)

def shutdown_check():
    power_off = 'p' #flag to indicate that the bridge is being powered off.
    exit_out = 'e' #flag to indicate that the bridge will exit out of its service(s).
    reboot = 'r' #flag to indicate that the bridge will reboot.
    flag = ' ' #capture contents of shut_file
    msg = " " #message to send back to calling statement.
    if os.path.exists(tmp_dir+shut_file):
        file = open(tmp_dir+shut_file,'r')
        flag = file.read()
        file.close()
        if exit_out in flag:
            msg = 'Exit'
        elif power_off in flag:
            msg = 'Shutdown'
        elif reboot in flag:
            msg = 'Reboot'
        else:
            msg = 'Shutdown'
    else:
        msg = 'Shutdown'
#    print (msg)
#    print (flag)
    return (msg)

#def reset_shutdown_check()

#Clear the Screen:
epd.init(epd.FULL_UPDATE)

#Draw out the boot screen
if shutdown_check() == "Exit":
    exit_draw.text((6, 27), 'ser2bt_status service', font=f_title_font24, fill = int(foreground))
else:
    exit_draw.text((53, 27), 'ser2bt_status', font=f_title_font24, fill = int(foreground))

exit_draw.text((77, 60), 'Will ' + shutdown_check(), font=f_title_font18, fill = int(foreground))
epd.display(epd.getbuffer(exit_image.rotate(screen_rotate)))

if shutdown_check() == "Shutdown":
    epd.sleep()
    time.sleep(2)
    # parameters to use the keys from the ser2bt_config.ini
    screen_rotate = int(shutdown_screen["screen_rotate"])
    foreground = int(shutdown_screen["foreground"])
    background = int(shutdown_screen["background"])

    icon_image = Image.new('1', (epd.height, epd.width), int(background))  #clear the frame
    icon_draw = ImageDraw.Draw(icon_image)

    icon_image.paste(bmp, (0,0))
    icon_draw.text((19,5), 'Serial to Bluetooth Bridge  ', font=f_title_font18,fill = int(foreground))
    icon_draw.text((4,47), 'master', font=f_top_line_font16,fill = int(foreground))
    icon_draw.text((122,47), host_name, font=f_top_line_font16,fill = int(foreground))
    icon_draw.text((204,47), 'slave', font=f_top_line_font16,fill = int(foreground))
    epd.init(epd.FULL_UPDATE)
    epd.display(epd.getbuffer(icon_image.rotate(screen_rotate)))

epd2in13_V2.epdconfig.module_init()
epd2in13_V2.epdconfig.module_exit()
exit()
